//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicyConnectManagementService.DataAccessServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Contoso.Apps.Insurance.Data.DTOs")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PolicyConnectManagementService.DataAccessServiceReference.Dependent[] DependentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PolicyConnectManagementService.DataAccessServiceReference.Dependent[] Dependents {
            get {
                return this.DependentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DependentsField, value) != true)) {
                    this.DependentsField = value;
                    this.RaisePropertyChanged("Dependents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Dob {
            get {
                return this.DobField;
            }
            set {
                if ((this.DobField.Equals(value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FName {
            get {
                return this.FNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FNameField, value) != true)) {
                    this.FNameField = value;
                    this.RaisePropertyChanged("FName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LName {
            get {
                return this.LNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LNameField, value) != true)) {
                    this.LNameField = value;
                    this.RaisePropertyChanged("LName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postcode {
            get {
                return this.PostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostcodeField, value) != true)) {
                    this.PostcodeField = value;
                    this.RaisePropertyChanged("Postcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dependent", Namespace="http://schemas.datacontract.org/2004/07/Contoso.Apps.Insurance.Data.DTOs")]
    [System.SerializableAttribute()]
    public partial class Dependent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PolicyConnectManagementService.DataAccessServiceReference.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PolicyHolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyHolderNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PolicyConnectManagementService.DataAccessServiceReference.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PolicyHolderId {
            get {
                return this.PolicyHolderIdField;
            }
            set {
                if ((this.PolicyHolderIdField.Equals(value) != true)) {
                    this.PolicyHolderIdField = value;
                    this.RaisePropertyChanged("PolicyHolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyHolderName {
            get {
                return this.PolicyHolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyHolderNameField, value) != true)) {
                    this.PolicyHolderNameField = value;
                    this.RaisePropertyChanged("PolicyHolderName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyHolder", Namespace="http://schemas.datacontract.org/2004/07/Contoso.Apps.Insurance.Data.DTOs")]
    [System.SerializableAttribute()]
    public partial class PolicyHolder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeductibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PolicyConnectManagementService.DataAccessServiceReference.Dependent[] DependentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Dependents_CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OutOfPocketMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PolicyConnectManagementService.DataAccessServiceReference.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PolicyConnectManagementService.DataAccessServiceReference.Policy PolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PolicyAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Deductible {
            get {
                return this.DeductibleField;
            }
            set {
                if ((this.DeductibleField.Equals(value) != true)) {
                    this.DeductibleField = value;
                    this.RaisePropertyChanged("Deductible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PolicyConnectManagementService.DataAccessServiceReference.Dependent[] Dependents {
            get {
                return this.DependentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DependentsField, value) != true)) {
                    this.DependentsField = value;
                    this.RaisePropertyChanged("Dependents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Dependents_Count {
            get {
                return this.Dependents_CountField;
            }
            set {
                if ((this.Dependents_CountField.Equals(value) != true)) {
                    this.Dependents_CountField = value;
                    this.RaisePropertyChanged("Dependents_Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OutOfPocketMax {
            get {
                return this.OutOfPocketMaxField;
            }
            set {
                if ((this.OutOfPocketMaxField.Equals(value) != true)) {
                    this.OutOfPocketMaxField = value;
                    this.RaisePropertyChanged("OutOfPocketMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PolicyConnectManagementService.DataAccessServiceReference.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PolicyConnectManagementService.DataAccessServiceReference.Policy Policy {
            get {
                return this.PolicyField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyField, value) != true)) {
                    this.PolicyField = value;
                    this.RaisePropertyChanged("Policy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PolicyAmount {
            get {
                return this.PolicyAmountField;
            }
            set {
                if ((this.PolicyAmountField.Equals(value) != true)) {
                    this.PolicyAmountField = value;
                    this.RaisePropertyChanged("PolicyAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Policy", Namespace="http://schemas.datacontract.org/2004/07/Contoso.Apps.Insurance.Data.DTOs")]
    [System.SerializableAttribute()]
    public partial class Policy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefaultDeductibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefaultOutOfPocketMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PolicyHolders_CountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefaultDeductible {
            get {
                return this.DefaultDeductibleField;
            }
            set {
                if ((this.DefaultDeductibleField.Equals(value) != true)) {
                    this.DefaultDeductibleField = value;
                    this.RaisePropertyChanged("DefaultDeductible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefaultOutOfPocketMax {
            get {
                return this.DefaultOutOfPocketMaxField;
            }
            set {
                if ((this.DefaultOutOfPocketMaxField.Equals(value) != true)) {
                    this.DefaultOutOfPocketMaxField = value;
                    this.RaisePropertyChanged("DefaultOutOfPocketMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PolicyHolders_Count {
            get {
                return this.PolicyHolders_CountField;
            }
            set {
                if ((this.PolicyHolders_CountField.Equals(value) != true)) {
                    this.PolicyHolders_CountField = value;
                    this.RaisePropertyChanged("PolicyHolders_Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataAccessServiceReference.IDataAccessService")]
    public interface IDataAccessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetData", ReplyAction="http://tempuri.org/IDataAccessService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetAllPeople", ReplyAction="http://tempuri.org/IDataAccessService/GetAllPeopleResponse")]
        PolicyConnectManagementService.DataAccessServiceReference.Person[] GetAllPeople();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetPeopleWhoAreNotPolicyHolders", ReplyAction="http://tempuri.org/IDataAccessService/GetPeopleWhoAreNotPolicyHoldersResponse")]
        PolicyConnectManagementService.DataAccessServiceReference.Person[] GetPeopleWhoAreNotPolicyHolders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetPolicyHolders", ReplyAction="http://tempuri.org/IDataAccessService/GetPolicyHoldersResponse")]
        PolicyConnectManagementService.DataAccessServiceReference.PolicyHolder[] GetPolicyHolders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetPolicies", ReplyAction="http://tempuri.org/IDataAccessService/GetPoliciesResponse")]
        PolicyConnectManagementService.DataAccessServiceReference.Policy[] GetPolicies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetPolicyHolder", ReplyAction="http://tempuri.org/IDataAccessService/GetPolicyHolderResponse")]
        PolicyConnectManagementService.DataAccessServiceReference.PolicyHolder GetPolicyHolder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetPerson", ReplyAction="http://tempuri.org/IDataAccessService/GetPersonResponse")]
        PolicyConnectManagementService.DataAccessServiceReference.Person GetPerson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetDependent", ReplyAction="http://tempuri.org/IDataAccessService/GetDependentResponse")]
        PolicyConnectManagementService.DataAccessServiceReference.Dependent GetDependent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetDependentsByPolicyHolder", ReplyAction="http://tempuri.org/IDataAccessService/GetDependentsByPolicyHolderResponse")]
        PolicyConnectManagementService.DataAccessServiceReference.Dependent[] GetDependentsByPolicyHolder(int policyHolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/SavePerson", ReplyAction="http://tempuri.org/IDataAccessService/SavePersonResponse")]
        int SavePerson(PolicyConnectManagementService.DataAccessServiceReference.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/SavePolicyHolder", ReplyAction="http://tempuri.org/IDataAccessService/SavePolicyHolderResponse")]
        int SavePolicyHolder(PolicyConnectManagementService.DataAccessServiceReference.PolicyHolder policyHolder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/SaveDependent", ReplyAction="http://tempuri.org/IDataAccessService/SaveDependentResponse")]
        int SaveDependent(PolicyConnectManagementService.DataAccessServiceReference.Dependent dependent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/DeletePerson", ReplyAction="http://tempuri.org/IDataAccessService/DeletePersonResponse")]
        void DeletePerson(int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/DeleteDependent", ReplyAction="http://tempuri.org/IDataAccessService/DeleteDependentResponse")]
        void DeleteDependent(int dependentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/DeletePolicyHolder", ReplyAction="http://tempuri.org/IDataAccessService/DeletePolicyHolderResponse")]
        void DeletePolicyHolder(int policyHolderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataAccessServiceChannel : PolicyConnectManagementService.DataAccessServiceReference.IDataAccessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataAccessServiceClient : System.ServiceModel.ClientBase<PolicyConnectManagementService.DataAccessServiceReference.IDataAccessService>, PolicyConnectManagementService.DataAccessServiceReference.IDataAccessService {
        
        public DataAccessServiceClient() {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public PolicyConnectManagementService.DataAccessServiceReference.Person[] GetAllPeople() {
            return base.Channel.GetAllPeople();
        }
        
        public PolicyConnectManagementService.DataAccessServiceReference.Person[] GetPeopleWhoAreNotPolicyHolders() {
            return base.Channel.GetPeopleWhoAreNotPolicyHolders();
        }
        
        public PolicyConnectManagementService.DataAccessServiceReference.PolicyHolder[] GetPolicyHolders() {
            return base.Channel.GetPolicyHolders();
        }
        
        public PolicyConnectManagementService.DataAccessServiceReference.Policy[] GetPolicies() {
            return base.Channel.GetPolicies();
        }
        
        public PolicyConnectManagementService.DataAccessServiceReference.PolicyHolder GetPolicyHolder(int id) {
            return base.Channel.GetPolicyHolder(id);
        }
        
        public PolicyConnectManagementService.DataAccessServiceReference.Person GetPerson(int id) {
            return base.Channel.GetPerson(id);
        }
        
        public PolicyConnectManagementService.DataAccessServiceReference.Dependent GetDependent(int id) {
            return base.Channel.GetDependent(id);
        }
        
        public PolicyConnectManagementService.DataAccessServiceReference.Dependent[] GetDependentsByPolicyHolder(int policyHolderId) {
            return base.Channel.GetDependentsByPolicyHolder(policyHolderId);
        }
        
        public int SavePerson(PolicyConnectManagementService.DataAccessServiceReference.Person person) {
            return base.Channel.SavePerson(person);
        }
        
        public int SavePolicyHolder(PolicyConnectManagementService.DataAccessServiceReference.PolicyHolder policyHolder) {
            return base.Channel.SavePolicyHolder(policyHolder);
        }
        
        public int SaveDependent(PolicyConnectManagementService.DataAccessServiceReference.Dependent dependent) {
            return base.Channel.SaveDependent(dependent);
        }
        
        public void DeletePerson(int personId) {
            base.Channel.DeletePerson(personId);
        }
        
        public void DeleteDependent(int dependentId) {
            base.Channel.DeleteDependent(dependentId);
        }
        
        public void DeletePolicyHolder(int policyHolderId) {
            base.Channel.DeletePolicyHolder(policyHolderId);
        }
    }
}
